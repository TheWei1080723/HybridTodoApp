@page "/todo"
@attribute [StreamRendering]
@using HybridTodoApp.Models
@* @using HybridTodoApp.Components.Pages *@
@using Microsoft.Maui.Networking
@inject TodoService TodoService
@inject IConnectivity ConnectivityService

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>

@if (!hasInternet)
{
    <p>No Internet!!!</p>
}
<ul>
    @foreach (var todo in todos)
    {
        @* <li>@todo.Title</li> *@
        <li>
            <input type="checkbox" @bind="todo.IsDone" />
            <input @bind="todo.Title" />
        </li>
    }
</ul>

<input placeholder="Something todo" @bind=newTodo />
<button @onclick="AddTodo">Add Todo</button>
<button @onclick="Save">Save</button>
<button @onclick="Upload">Upload</button>

@code {
    List<TodoItem> todos = new List<TodoItem>();
    String? newTodo;
    bool hasInternet = true;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var items = TodoService.LoadItems();
        todos.AddRange(items);
    }

    void Upload()
    {
        if (ConnectivityService is null)
            return;

        hasInternet = ConnectivityService.NetworkAccess == NetworkAccess.Internet;
    }

    void Save()
    {
        TodoService.SaveItems(todos);
    }

    void AddTodo()
    {
        if (String.IsNullOrEmpty(newTodo))
            return;

        todos.Add(new TodoItem
            {
                Title = newTodo
            });
        newTodo = null;
    }
}
